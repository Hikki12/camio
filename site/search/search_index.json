{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CAMIO A framework to manage easily single or multiple cameras. Based on opencv and threading libraries. Install 1.- Create a virtualenv: python3 -m venv venv 2.- Activate the virtualenv: source venv/bin/activate 3.- Clone the repository and install the package: git clone https://github.com/Hikki12/camio && cd camio pip install -U .","title":"Home"},{"location":"#install","text":"1.- Create a virtualenv: python3 -m venv venv 2.- Activate the virtualenv: source venv/bin/activate 3.- Clone the repository and install the package: git clone https://github.com/Hikki12/camio && cd camio pip install -U .","title":"Install"},{"location":"examples/","text":"Examples Single camera import time import cv2 from camio import Camera camera = Camera ( src = 0 , fps = 30 , size = None , emitterIsEnabled = False , queueModeEnabled = False , backgroundIsEnabled = True , ) camera . start () while True : image = camera . read () if image is not None : cv2 . imshow ( 'image' , image ) if cv2 . waitKey ( 1 ) & 0xFF == ord ( 'q' ): break camera . stop () cv2 . destroyAllWindows ()","title":"Examples"},{"location":"examples/#examples","text":"","title":"Examples"},{"location":"examples/#single-camera","text":"import time import cv2 from camio import Camera camera = Camera ( src = 0 , fps = 30 , size = None , emitterIsEnabled = False , queueModeEnabled = False , backgroundIsEnabled = True , ) camera . start () while True : image = camera . read () if image is not None : cv2 . imshow ( 'image' , image ) if cv2 . waitKey ( 1 ) & 0xFF == ord ( 'q' ): break camera . stop () cv2 . destroyAllWindows ()","title":"Single camera"}]}